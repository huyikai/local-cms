{"version":3,"file":"cli.js","sources":["../../bin/create.ts","../../bin/cli.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { execSync } from 'child_process';\nimport fs from 'fs-extra';\nimport inquirer from 'inquirer';\nimport ora from 'ora';\nimport path from 'path';\ninterface Answers {\n  name: string;\n  author: string;\n  newDir: boolean;\n  version: string;\n}\n\n// 获取当前工作目录\nconst cwd = process.cwd();\n\n// 进度动画\nconst spinner = ora();\n\n// 粗体文字\nconst blodText = (text: string) => chalk.blue.bold(text);\n\nexport default async (answers: Answers) => {\n  const { name, author, version, newDir } = answers;\n  const targetDir = path.join(cwd, newDir ? name : '');\n\n  const copyTemplate = async () => {\n    // 初始化package.json\n    execSync('npm init -y');\n    execSync(`npm install @huyikai/vitepress-helper@latest`, {\n      stdio: 'inherit'\n    });\n    // execSync('npm link @huyikai/vitepress-helper');\n\n    // 模板文件的路径\n    const templatePath = path.join(\n      cwd,\n      'node_modules/@huyikai/vitepress-helper/template'\n    );\n    // 目标目录的路径\n    const targetPath = path.join(cwd, '');\n    // 将模板文件拷贝到目标目录\n    fs.copySync(templatePath, targetPath);\n    // 修改package.json\n    const changeConfig = () => {\n      const packagePath = path.join(cwd, 'package.json');\n      let packageInfo = JSON.parse(fs.readFileSync(packagePath).toString());\n      packageInfo.name = name;\n      packageInfo.author = author;\n      packageInfo.version = version;\n      packageInfo.scripts['cms'] =\n        'node node_modules/@huyikai/local-cms/cms.js docs';\n      packageInfo.devDependencies['@huyikai/vitepress-helper'] = 'latest';\n      packageInfo.devDependencies['@huyikai/local-cms'] = 'latest';\n      fs.writeFileSync(packagePath, JSON.stringify(packageInfo, null, 2));\n    };\n    changeConfig();\n    execSync('npm i', { stdio: 'inherit' });\n    spinner.succeed('Install Complete!!!');\n    console.log(\n      `\\r\\nNow you can:\\r\\nrun ${blodText('npm run dev')} to preview`\n    );\n    console.log(`\\r\\nrun ${blodText('npm run cms')} to manage content`);\n  };\n  // 生成\n  const generate = async () => {\n    spinner.start('Installing...');\n    copyTemplate();\n  };\n\n  // 新建目录&目录已存在\n  if (newDir && fs.existsSync(targetDir)) {\n    inquirer\n      .prompt([\n        {\n          name: 'action',\n          type: 'list',\n          message: 'Target directory already exists Pick an action:',\n          choices: [\n            {\n              name: 'Overwrite',\n              value: 'overwrite'\n            },\n            {\n              name: 'Cancel',\n              value: false\n            }\n          ]\n        }\n      ])\n      .then((res) => {\n        if (res.action === 'overwrite') {\n          // 移除已存在目录\n          fs.removeSync(targetDir);\n          generate();\n        }\n        return;\n      });\n  } else {\n    generate();\n  }\n};\n","#!/usr/bin/env node\n\nimport { exec, execSync } from 'child_process';\n\nimport { Command } from 'commander';\nimport chalk from 'chalk';\nimport create from './create';\nimport figlet from 'figlet';\nimport { fileURLToPath } from 'url';\nimport fs from 'fs-extra';\nimport inquirer from 'inquirer';\nimport ora from 'ora';\nimport path from 'path';\n\nconst spinner = ora();\nconst program: Command = new Command();\n\nprogram\n  .name('local-cms')\n  .description(\n    'A Management System for Managing Local markdown Files\\r\\n一个管理本地 markdown 文件的管理系统'\n  );\n\n// 工作目录\nconst cwd = process.cwd();\n// 粗体文字\nconst blodText = (text: string) => chalk.blue.bold(text);\n// 依赖存放目录\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst packagePath = path.join(__dirname, './../../package.json');\nconst packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));\n\n// 设置程序的版本信息，用户可以通过 -v,-V, --version 参数查看当前版本信息\nprogram.version(\n  packageJson.version,\n  '-v,-V, --version',\n  'Output current version information'\n);\n\nconst prompts = [\n  {\n    type: 'list',\n    name: 'action',\n    message:\n      'Please select the action you want to perform:(请选择您要执行的操作：)',\n    choices: [\n      {\n        name: \"1.Add 'Local-CMS' to the current directory to manage the content.(在当前目录添加 'Local-CMS' 来管理内容)\",\n        value: 'next'\n      },\n      {\n        name: \"2.Create a CMS project based on 'VitePress Custom' management.(新建一个基于 'VitePress' 管理的 CMS 的项目)\",\n        value: 'new'\n      }\n    ]\n  }\n];\n\nconst handleCmsScript = async (options: any) => {\n  const _packagePath = path.join(cwd, './package.json');\n  const _packageJson = JSON.parse(fs.readFileSync(_packagePath).toString());\n\n  const modifyPackageJson = () => {\n    const cmsCMD = `node node_modules/@huyikai/local-cms/cms.js ${options.directory}`;\n    _packageJson.scripts.cms = cmsCMD;\n    fs.writeFileSync(_packagePath, JSON.stringify(_packageJson, null, 2));\n  };\n\n  if (_packageJson.scripts.cms) {\n    const answers = await inquirer.prompt({\n      type: 'confirm',\n      name: 'overwrite',\n      message:\n        'The cms command already exists in the script of the packages.json file, do you want to overwrite it? \\r\\npackages.json 文件的 scripts 中已存在 cms 命令，是否覆盖？\\r\\n'\n    });\n    if (answers.overwrite) {\n      modifyPackageJson();\n    }\n  } else {\n    modifyPackageJson();\n  }\n  spinner.start('Installing...');\n  exec('npm i @huyikai/local-cms -D', async (error) => {\n    if (error) {\n      console.error(`exec error: ${error}`);\n      return;\n    }\n    // 检查目录是否存在\n    if (!fs.existsSync(options.directory)) {\n      // 如果目录不存在，创建目录\n      fs.mkdirSync(options.directory);\n    }\n    spinner.succeed('install Complete!!!');\n    const runcms = blodText('npm run cms');\n    console.log(\n      `\\r\\nNow you can execute ${runcms} to run cms management content.\\r\\n现在你可以执行 ${runcms} 来运行 cms 来管理内容了。\\r\\n`\n    );\n  });\n};\n\nprogram\n  .command('init')\n  .description('Guide to complete the initialization operation')\n  .summary('initialization')\n  .action(async () => {\n    let results = await inquirer.prompt(prompts);\n\n    if (results.action === 'next') {\n      let directory = await inquirer.prompt([\n        {\n          name: 'directory',\n          message:\n            'Set up a directory to store content.\\r\\n设置一个用来存放内容的目录',\n          type: 'input',\n          default: 'docs'\n        }\n      ]);\n      if (!fs.existsSync('./package.json')) {\n        try {\n          execSync('npm init -y');\n        } catch (error) {\n          console.error(`exec error: ${error}`);\n          return;\n        }\n      }\n      await handleCmsScript({ directory: directory.directory });\n    } else if (results.action === 'new') {\n      const question = [\n        {\n          name: 'name',\n          message: 'Project Name',\n          type: 'input',\n          default: 'my-docs'\n        },\n        {\n          name: 'author',\n          description: 'Input Author Name',\n          message: 'Author',\n          default: 'huyikai'\n        },\n        {\n          name: 'version',\n          description: 'Version',\n          message: 'Version',\n          default: '1.0.0'\n        },\n        {\n          name: 'newDir',\n          message: 'Create A New Directory?',\n          type: 'list',\n          choices: [\n            { name: 'yes', value: true },\n            { name: 'no', value: false }\n          ]\n        }\n      ];\n      let answers = await inquirer.prompt(question);\n      create(answers);\n    }\n  });\n\n// 设置程序的使用方法\nprogram.usage('<command> [option]');\n\n// 使用帮助指令时触发的事件\nprogram.on('--help', () => {\n  console.log(\n    `\\r\\nRun ${blodText(\n      'cms <command> --help'\n    )} for detailed usage of given command`\n  );\n  console.log(\n    `\\r\\nGitHub: ${blodText('https://github.com/huyikai/local-cms')}`\n  );\n  console.log(\n    `\\r\\nHomePage: ${blodText('https://huyikai.github.io/local-cms')}`\n  );\n  console.log(\n    '\\r\\n' +\n      chalk\n        .hex('#41B883')\n        .bgHex('#35495E')\n        .bold(\n          figlet.textSync('Local CMS', {\n            font: 'Standard',\n            horizontalLayout: 'default',\n            verticalLayout: 'default',\n            width: 90,\n            whitespaceBreak: false\n          })\n        )\n  );\n});\n\n// 解析命令行参数(必须)\nprogram.parse(process.argv);\n"],"names":["cwd","process","spinner","ora","blodText","text","chalk","blue","bold","create","async","answers","name","author","version","newDir","targetDir","path","join","generate","start","execSync","stdio","templatePath","targetPath","fs","copySync","packagePath","packageInfo","JSON","parse","readFileSync","toString","scripts","devDependencies","writeFileSync","stringify","changeConfig","succeed","console","log","copyTemplate","existsSync","inquirer","prompt","type","message","choices","value","then","res","action","removeSync","program","Command","description","__dirname","dirname","fileURLToPath","url","packageJson","prompts","command","summary","results","directory","default","error","options","_packagePath","_packageJson","modifyPackageJson","cmsCMD","cms","overwrite","exec","mkdirSync","runcms","handleCmsScript","question","usage","on","hex","bgHex","figlet","textSync","font","horizontalLayout","verticalLayout","width","whitespaceBreak","argv"],"mappings":"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"}